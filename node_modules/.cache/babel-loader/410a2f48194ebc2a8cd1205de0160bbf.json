{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\mygroceries\\\\src\\\\components\\\\Scheduler\\\\Scheduler.js\";\nimport React, { Component } from 'react';\nimport 'dhtmlx-scheduler';\nimport 'dhtmlx-scheduler/codebase/dhtmlxscheduler_material.css';\nconst scheduler = window.scheduler;\nexport default class Scheduler extends Component {\n  initSchedulerEvents() {\n    if (scheduler._$initialized) {\n      return;\n    }\n\n    const onDataUpdated = this.props.onDataUpdated;\n    scheduler.attachEvent('onClickButton', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('create', ev, id);\n      }\n    });\n    scheduler.attachEvent('onEventChanged', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('update', ev, id);\n      }\n    });\n    scheduler.attachEvent('onEventDeleted', (id, ev) => {\n      if (onDataUpdated) {\n        onDataUpdated('delete', ev, id);\n      }\n    });\n    scheduler._$initialized = true;\n  }\n\n  componentDidMount() {\n    scheduler.skin = 'material';\n    scheduler.config.header = ['day', 'week', 'month', 'date', 'prev', 'today', 'next'];\n    scheduler.config.hour_date = '%g:%i %A';\n    scheduler.xy.scale_width = 70;\n    this.initSchedulerEvents();\n    const {\n      events\n    } = this.props;\n    scheduler.init(this.schedulerContainer, new Date());\n    scheduler.clearAll();\n    scheduler.parse(events);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return this.props.timeFormatState !== nextProps.timeFormatState;\n  }\n\n  componentDidUpdate() {\n    scheduler.render();\n  }\n\n  setHoursScaleFormat(state) {\n    scheduler.config.hour_date = state ? '%H:%i' : '%g:%i %A';\n    scheduler.templates.hour_scale = scheduler.date.date_to_str(scheduler.config.hour_date);\n  }\n\n  render() {\n    const {\n      timeFormatState\n    } = this.props;\n    this.setHoursScaleFormat(timeFormatState);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: input => {\n        this.schedulerContainer = input;\n      },\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/react/mygroceries/src/components/Scheduler/Scheduler.js"],"names":["React","Component","scheduler","window","Scheduler","initSchedulerEvents","_$initialized","onDataUpdated","props","attachEvent","id","ev","componentDidMount","skin","config","header","hour_date","xy","scale_width","events","init","schedulerContainer","Date","clearAll","parse","shouldComponentUpdate","nextProps","timeFormatState","componentDidUpdate","render","setHoursScaleFormat","state","templates","hour_scale","date","date_to_str","input","width","height"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'dhtmlx-scheduler';\nimport 'dhtmlx-scheduler/codebase/dhtmlxscheduler_material.css';\n\nconst scheduler = window.scheduler;\n\nexport default class Scheduler extends Component {\n\n    initSchedulerEvents() {\n        if (scheduler._$initialized) {\n            return;\n        }\n\n        const onDataUpdated = this.props.onDataUpdated;\n\n        scheduler.attachEvent('onClickButton', (id, ev) => {\n            if (onDataUpdated) {\n                onDataUpdated('create', ev, id);\n            }\n        });\n\n        scheduler.attachEvent('onEventChanged', (id, ev) => {\n            if (onDataUpdated) {\n                onDataUpdated('update', ev, id);\n            }\n        });\n\n        scheduler.attachEvent('onEventDeleted', (id, ev) => {\n            if (onDataUpdated) {\n                onDataUpdated('delete', ev, id);\n            }\n        });\n        scheduler._$initialized = true;\n    }\n\n    componentDidMount() {\n        scheduler.skin = 'material';\n        scheduler.config.header = [\n            'day',\n            'week',\n            'month',\n            'date',\n            'prev',\n            'today',\n            'next'\n        ];\n        scheduler.config.hour_date = '%g:%i %A';\n        scheduler.xy.scale_width = 70;\n\n        this.initSchedulerEvents();\n\n        const { events } = this.props;\n        scheduler.init(this.schedulerContainer, new Date());\n        scheduler.clearAll();\n        scheduler.parse(events);\n    }\n\n    shouldComponentUpdate(nextProps) {\n        return this.props.timeFormatState !== nextProps.timeFormatState;\n    }\n\n    componentDidUpdate() {\n        scheduler.render();\n    }\n\n    setHoursScaleFormat(state) {\n        scheduler.config.hour_date = state ? '%H:%i' : '%g:%i %A';\n        scheduler.templates.hour_scale = scheduler.date.date_to_str(scheduler.config.hour_date);\n    }\n\n    render() {\n        const { timeFormatState } = this.props;\n        this.setHoursScaleFormat(timeFormatState);\n        return (\n            <div\n                ref={ (input) => { this.schedulerContainer = input } }\n                style={ { width: '100%', height: '100%' } }\n            ></div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}