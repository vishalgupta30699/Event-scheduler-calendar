{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\mygroceries\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Scheduler from './components/Scheduler';\nimport Toolbar from './components/Toolbar';\nimport MessageArea from './components/MessageArea';\nimport './App.css';\nconst data = [];\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentTimeFormatState: true,\n      messages: []\n    };\n\n    this.logDataUpdate = (action, ev, id) => {\n      const text = ev && ev.text ? ` (${ev.text})` : '';\n      const message = `event ${action}: ${id} ${text}`;\n      this.addMessage(message);\n    };\n\n    this.handleTimeFormatStateChange = state => {\n      this.setState({\n        currentTimeFormatState: state\n      });\n    };\n  }\n\n  addMessage(message) {\n    const maxLogLength = 5;\n    const newMessage = {\n      message\n    };\n    const messages = [newMessage, ...this.state.messages];\n\n    if (messages.length > maxLogLength) {\n      messages.length = maxLogLength;\n    }\n\n    this.setState({\n      messages\n    });\n  }\n\n  render() {\n    const {\n      currentTimeFormatState,\n      messages\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tool-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      timeFormatState: currentTimeFormatState,\n      onTimeFormatStateChange: this.handleTimeFormatStateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scheduler-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Scheduler, {\n      events: data,\n      timeFormatState: currentTimeFormatState,\n      onDataUpdated: this.logDataUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(MessageArea, {\n      messages: messages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/react/mygroceries/src/App.js"],"names":["React","Component","Scheduler","Toolbar","MessageArea","data","App","state","currentTimeFormatState","messages","logDataUpdate","action","ev","id","text","message","addMessage","handleTimeFormatStateChange","setState","maxLogLength","newMessage","length","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAO,WAAP;AAEA,MAAMC,IAAI,GAAG,EAAb;;AAIA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBM,KADwB,GAChB;AACJC,MAAAA,sBAAsB,EAAE,IADpB;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADgB;;AAAA,SAoBxBC,aApBwB,GAoBR,CAACC,MAAD,EAASC,EAAT,EAAaC,EAAb,KAAoB;AAChC,YAAMC,IAAI,GAAGF,EAAE,IAAIA,EAAE,CAACE,IAAT,GAAiB,KAAIF,EAAE,CAACE,IAAK,GAA7B,GAAkC,EAA/C;AACA,YAAMC,OAAO,GAAI,SAAQJ,MAAO,KAAIE,EAAG,IAAGC,IAAK,EAA/C;AACA,WAAKE,UAAL,CAAgBD,OAAhB;AACH,KAxBuB;;AAAA,SA0BxBE,2BA1BwB,GA0BOV,KAAD,IAAW;AACrC,WAAKW,QAAL,CAAc;AACVV,QAAAA,sBAAsB,EAAED;AADd,OAAd;AAGH,KA9BuB;AAAA;;AAMxBS,EAAAA,UAAU,CAACD,OAAD,EAAU;AAChB,UAAMI,YAAY,GAAG,CAArB;AACA,UAAMC,UAAU,GAAG;AAAEL,MAAAA;AAAF,KAAnB;AACA,UAAMN,QAAQ,GAAG,CACbW,UADa,EAEb,GAAG,KAAKb,KAAL,CAAWE,QAFD,CAAjB;;AAKA,QAAIA,QAAQ,CAACY,MAAT,GAAkBF,YAAtB,EAAoC;AAChCV,MAAAA,QAAQ,CAACY,MAAT,GAAkBF,YAAlB;AACH;;AACD,SAAKD,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd;AACH;;AAaDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEd,MAAAA,sBAAF;AAA0BC,MAAAA;AAA1B,QAAuC,KAAKF,KAAlD;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AACI,MAAA,eAAe,EAAEC,sBADrB;AAEI,MAAA,uBAAuB,EAAE,KAAKS,2BAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAOI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,MAAM,EAAEZ,IADZ;AAEI,MAAA,eAAe,EAAEG,sBAFrB;AAGI,MAAA,aAAa,EAAE,KAAKE,aAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,eAcI,oBAAC,WAAD;AACI,MAAA,QAAQ,EAAED,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CADJ;AAoBH;;AArDuB;;AAuD5B,eAAeH,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Scheduler from './components/Scheduler';\nimport Toolbar from './components/Toolbar';\nimport MessageArea from './components/MessageArea';\nimport './App.css';\n\nconst data = [\n    \n];\n\nclass App extends Component {\n    state = {\n        currentTimeFormatState: true,\n        messages: []\n    };\n\n    addMessage(message) {\n        const maxLogLength = 5;\n        const newMessage = { message };\n        const messages = [\n            newMessage,\n            ...this.state.messages\n        ];\n\n        if (messages.length > maxLogLength) {\n            messages.length = maxLogLength;\n        }\n        this.setState({ messages });\n    }\n\n    logDataUpdate = (action, ev, id) => {\n        const text = ev && ev.text ? ` (${ev.text})` : '';\n        const message = `event ${action}: ${id} ${text}`;\n        this.addMessage(message);\n    }\n\n    handleTimeFormatStateChange = (state) => {\n        this.setState({\n            currentTimeFormatState: state\n        });\n    }\n    render() {\n        const { currentTimeFormatState, messages } = this.state;\n        return (\n            <div>\n                <div className=\"tool-bar\">\n                    <Toolbar\n                        timeFormatState={currentTimeFormatState}\n                        onTimeFormatStateChange={this.handleTimeFormatStateChange}\n                    />\n                </div>\n                <div className='scheduler-container'>\n                    <Scheduler\n                        events={data}\n                        timeFormatState={currentTimeFormatState}\n                        onDataUpdated={this.logDataUpdate}\n                    />\n                </div>\n                <MessageArea\n                    messages={messages}\n                />\n                </div>\n        );\n    }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}